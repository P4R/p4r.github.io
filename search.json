[






{
"title"    : "Commits verificados en Github",
"category" : "",
"tags"     : "Gihub",
"url"      : "/blog/2016/04/17/github-signed-commits/",
"date"     : "17 de Abril de 2016",
"content"  : "Hace unos días apareció la opción de los commits verificados en Github, para utilizar esta opción simplemente hay que firmar los commits con GPG.Para configurar esta característica en Linux y OSX debemos seguir los siguientes pasos:  Lo primero que tenemos que hacer es comprobar si ya tenemos una llave de GPG en nuestro PC.Para ello utilizaremos el siguiente comando.$ gpg --list-keys  En caso de no tener ninguna llave podremos generar una con el siguiente comando.          Es importante que al generar la llave introduzcamos el email que usemos en Github.      $ gpg --gen-key  Una vez generada la llave podremos consultarla con el comando anterior.$ gpg --list-keys/Users/hubot/.gnupg/pubring.gpg------------------------------------pub   4096R/A8F99211 2016-04-05uid                  Hubot sub   4096R/Z832QR89 2016-04-05  Tras en anterior comando obtendremos el ID de la llave en este caso A8F99211. Ahora exportaremosla llave en formato ASCII armor con el siguiente comando.$ gpg --armor --export A8F99211      Una vez exportada la llave la podremos copiar y añadir a nuestra cuenta de Github. Para ello hay que ira la Configuración de llaves de Github y pulsaremos el botónNew GPG Key el cual nos permitirá pegar la llave y añadirla.        Finalmente nos faltaría añadir la llave a nuestra configuración local de git utilizando el ID anterior(A8F99211). Para ello utilizaremos el siguiente comando.  $ git config --global user.signingkey public GPG key A8F99211Ahora ya podemos realizar commits firmados con el siguiente comando.git commit -S -m &quot;Mensaje commit&quot;Una vez hagamos push de estos commits ya deberíamos verlos como verificados."
} ,






{
"title"    : "Hola Mundo",
"category" : "",
"tags"     : "Hola Mundo, Python, Java, Javascript",
"url"      : "/blog/2016/04/03/hola-mundo/",
"date"     : "3 de Abril de 2016",
"content"  : "Después de mucho tiempo con la intención de crear mi propia web personal al fin ha llegado el día.En esta web me gustaría mostrar algunos de mis proyectos, compartir mis conocimientos relacionados conlas nuevas tecnologías y la programación.Aun no estoy seguro del cual va a ser el contenido exacto del blog, pero me gustaría hablaros de cosasrelacionadas con Android (programación, noticias, novedades …). También me gustaría hablaros sobreRaspberry ya que actualmente tengo un Raspberry Pi 2 Model B, en este caso seguramente sea todo a nivelde sistemas operativos, aplicaciones y servicios que podemos ejecutar en este mini PC. Por ultimo tambiéncreo que puede ser interesante hablar sobre Linux y OSX.Además si el tiempo me lo permite me gustaría aprovechar para aprender Angular,Polymer, Node.js … y de paso contarlo en el blog.En esta primera publicación tampoco quiero entrar en mucho detalle así que simplemente compartiré en envarios lenguajes el típico código que se suele usar cuando se aprende a programar,el famoso Hola Mundo.Python:print &quot;Hola Mundo!&quot;Java:public class HolaMundo {    public static void main(String[] args) {        System.out.println(&quot;Hola Mundo!&quot;);    }}Javascript:alert(&quot;Hola Mundo!&quot;);"
} ,







{
"title"    : "Knock the Port",
"category" : "",
"tags"     : "",
"url"      : "/projects/2015/09/24/knock-the-port/",
"date"     : "24 de Septiembre de 2015",
"content"  : "Cliente de Port Knocking para Android.¿Que es el Port Knocking?El Port Knocking es un mecanismo para abrir puertos externamente en un firewall mediante una secuenciapreestablecida de intentos de conexión a puertos que se encuentran cerrados. Una vez que el firewall recibeuna secuencia de conexión correcta, sus reglas son modificadas para permitir al host que realizó los intentosconectarse a un puerto específico.El propósito principal del golpeo de puertos es prevenir un escaneo de puertos por parte de un atacante que buscaposibles servicios vulnerables. Como los mismos solo se abren ante un golpeo de puertos correcto. Normalmente lospuertos donde se brindan los servicios se muestran aparentemente cerrados.Por lo general este mecanismo se implementa configurando un servicio para que revise el log del firewall paradetectar esta secuencia de intentos de conexión.La aplicaciónLa aplicación Knock the Port esta realizada en Android utilizando Java y el IDE Android Studio.Esta aplicación se ha desarrollado para permitir enviar secuencias de port knocking a un servidorde forma rápida y sencilla ya que en la actualidad es bastante frecuente utilizar los dispositivos móvilespara todo.Como características de la aplicación cabe destacar que se han seguido las guías de diseño de Material Design,se ha traducido a varios idiomas para facilitar el uso al usuario y se ha utilizado un nivel de API bastantepequeño para permitir la compatibilidad con la mayoría de dispositivos Android ya que solo se requiere la versión4.0 o superior para poder instalar la aplicación.La aplicación se puede descargar en el Play Store.El código fuente del proyecto se puede encontrar en Github."
} ,






{
"title"    : "Página Web",
"category" : "",
"tags"     : "",
"url"      : "/projects/2016/04/03/personal-website/",
"date"     : "3 de Abril de 2016",
"content"  : "Página web personal con Jekyll.Este proyecto consiste en una página web personal y el resultado del proyecto ha sido esta misma web.Desde el primer día se miraron varias opciones pero una de las más interesantes fue la de utilizar Github Pagesya que nos ofrece un servicio gratuito y sus servidores son bastante rápidos, fiables.Tras empezar a investigar sobre Gihub Pages me encontré con Jekyll una herramienta fantástica para generar paginas webestáticas¿Que es Gihub Pages?Github Pages es un servicio ofrecido por Github que nos permite publicar paginas web estáticas a partirde repositorios de git que tengamos en Gihub. Para esto tenemos dos tipos de paginas las de usuario de la cualse dispone de una por usuario y las de proyecto o repositorio de las cuales podemos tener tantas como repositorios.Para utilizar las paginas de usuario debemos crear un repositorio con nuestro nombre de usuario como subdominiode github.io, en mi caso el nombre del repositorio es “p4r.github.io” y se podría acceder desdehttp://p4r.github.io. En el caso de las paginas de usuario se publicaráel contenido de las rama master.Para utilizar las paginas de proyecto sera suficiente con crear un repositorio y crear la rama gh-pages que será laque tendrá el contenido que se publicara. En este caso el contenido se publicara en la misma url mencionadaanteriormente pero añadiendo el repositorio “http://p4r.github.io/nombre_del_repositorio”.¿Que es Jekyll?Jekyll es un generador de sitios web estáticos creado por Tom Preston-Wernerco-fundador de GitHub. Se puede usar para generar cualquier tipo de sitio web incluyendo un blog.Para ello Jekyll utiliza plantillas de código en las que luego se inserta el contenido. Para ello se utiliza:Markdown, Liquid, HTML, CSS y JS.La Página webEn un primer momento decidí empezar la web utilizando Material Design Lite para crear unaplantilla con los patrones de diseño de Material Design. Tras unos días trabajando con la plantilla me encontré un proyectoen Github que consistía en una plantilla con estos mismos patrones de diseño pero en este caso estaba utilizando Polymer asíque decidí utilizarla para ir aprendiendo poco a poco como funciona Polymer. En un primer momento hice un fork para solucionaralgún error que existía en el proyecto y luego ya aplique la plantilla a mi proyecto web donde la he traducido y la he ido personalizando. Para ello he eliminado algunas cosas que no necesitaba para agilizar la carga de la web, también he adaptadolos tamaños de algunas cosas y he modificado la estructura de la web creando una pagina principal para poder tener el blogen otro apartado y crear el apartado de proyectos.Por último para agilizar la subida de contenido se han añadido los archivos de configuración de Travis para que cuando se hagaalguna modificación Travis suba automáticamente el código generado a la rama correspondiente de Github.El código fuente del proyecto se puede encontrar en Github."
} 

]