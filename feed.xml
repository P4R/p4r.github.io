<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pere Albujer</title>
    <description>Página web de Pere Albujer | El éxito depende del esfuerzo</description>
    <link>http://albujer.com/</link>
    <atom:link href="http://albujer.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 08 May 2016 16:18:45 +0000</pubDate>
    <lastBuildDate>Sun, 08 May 2016 16:18:45 +0000</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Publicar web con Travis CI</title>
        <description>&lt;p&gt;A los pocos días de poner la web en funcionamiento en Github Pages me di cuenta de que había que hacer algo para automatizar la publicación de contenido en la web. Tras analizar todas opciones decidí que Travis CI fuera el encargado de procesar todo el código y publicarlo en la web.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;El ejemplo que voy a usar es el de mi web, así que explicare como publico el código generado por Jekyll y el descargado
de componentes web como Polymer y otros ya que estos nunca están presentes en la rama que contiene el código del proyecto.&lt;/p&gt;

&lt;p&gt;A continuación podéis ver de forma mas concreta el proyecto web y una ligera explicación de como funciona
Gihub Pages. &lt;a href=&quot;/projects/2016/04/03/personal-website/&quot; target=&quot;_blank&quot;&gt;Ver proyecto web&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;requisitos&quot;&gt;Requisitos:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Repositorio en Github con la web.&lt;/li&gt;
  &lt;li&gt;Cuenta en &lt;a href=&quot;https://travis-ci.org/&quot; target=&quot;_blank&quot;&gt;Travis CI&lt;/a&gt; (Se puede hacer login con la cuenta de Github)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;como-funciona-travis-ci&quot;&gt;¿Como funciona Travis CI?&lt;/h3&gt;

&lt;p&gt;Travis es un sistema de integración continua el cual nos permite realizar test sobre nuestro código de Github.
En nuestro caso ademas de comprobar que todo ha funcionado bien lo vamos a utilizar para publicar el
código generado en otra rama de nuestro repositorio.&lt;/p&gt;

&lt;p&gt;Travis se activa con cada push que se hace a nuestro repositorio o también con los pull request aunque esta última
opción no la vamos a utilizar.&lt;/p&gt;

&lt;h3 id=&quot;configuracin-travis-ci&quot;&gt;Configuración Travis CI&lt;/h3&gt;

&lt;p&gt;En primer lugar debemos obtener un token de Github para poder hacer push desde Travis, el token lo podemos obtener
desde &lt;a href=&quot;https://github.com/settings/tokens&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A continuación accederemos a la web de Travis donde lo autorizaremos para acceder a nuestro repositorio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-active-repo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez autorizado pasaremos configurar el repositorio en Travis mediante el botón de ajustes, deberemos
activar las opciones que aparecen en la siguiente imagen y añadiremos una variable de entorno llamada
GH_TOKEN donde pondremos el token obtenido en Github &lt;strong&gt;(Importante marcar el token como oculto/privado
para que nadie lo pueda ver y utilizar)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/travis-config-repo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez este todo configurado solo tenemos que añadir el fichero de Travis y el script que ejecutaremos en
nuestro repositorio de Github.&lt;/p&gt;

&lt;h5 id=&quot;travisyml&quot;&gt;.travis.yml&lt;/h5&gt;

&lt;p&gt;Como se puede ver en este fichero especificaremos todo lo necesario para poder ejecutar nuestro código. En
mi caso simplemente necesitaré Node.js y Ruby. Además especificaré el script que se tendrá que ejecutar,
en este caso Travis actuara en todas las ramas que contengan este archivo pero podríamos limitar las ramas
en el archivo de configuración.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node_js&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;node_js&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.12.2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;before_install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rvm install 2.2.2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bash ./deploy.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h5 id=&quot;deploysh&quot;&gt;deploy.sh&lt;/h5&gt;

&lt;p&gt;Este script simplemente ejecutará todas las instrucciones necesarias para obtener el código de la
web y si todo va bien se configurará un usuario de git (Se puede modificar el email por el nuestro
de Github para que se asocie el commit a nuestra cuenta) que sera el encargado de subir los cambios
a la rama en la cual se publica la web que en este caso es master pero en otros podría ser gh-pages.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e &lt;span class=&quot;c&quot;&gt;# exit with nonzero exit code if anything fails&lt;/span&gt;

gem install bundler
bundle install

&lt;span class=&quot;c&quot;&gt;# Add source from master branch&lt;/span&gt;
git clone https://github.com/P4R/p4r.github.io.git -b master dist

&lt;span class=&quot;c&quot;&gt;# Run commands to build the website in the dist folder&lt;/span&gt;
npm install -g gulp bower &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm install &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bower install
gulp

&lt;span class=&quot;c&quot;&gt;# Go to the dist directory.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;dist

&lt;span class=&quot;c&quot;&gt;# Inside this git repo we&#39;ll pretend to be a new user&lt;/span&gt;
git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;Travis CI&quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;travis@travis-ci.org&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Add changes and commit.&lt;/span&gt;
git add .
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;Deploy with Travis CI&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Push from the current repo&#39;s master branch to the remote&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# repo&#39;s master branch. We redirect any output to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# /dev/null to hide any sensitive credential data that might otherwise be exposed.&lt;/span&gt;
git push --quiet &lt;span class=&quot;s2&quot;&gt;&quot;https://&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GH_TOKEN&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@github.com/P4R/p4r.github.io.git&quot;&lt;/span&gt; master &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Una vez todo configurado para comprobar que funciona simplemente tendremos que hacer push a nuestro
repositorio y desde la web de Travis podremos ver como se va ejecutando el código y si todo va bien
se publicará en la rama correspondiente.&lt;/p&gt;

</description>
        <pubDate>Sun, 08 May 2016 16:00:00 +0000</pubDate>
        <link>http://albujer.com/blog/2016/05/08/deploy-github-pages-with-travis/</link>
        <guid isPermaLink="true">http://albujer.com/blog/2016/05/08/deploy-github-pages-with-travis/</guid>
        
        <category>Travis</category>
        
        <category>Github</category>
        
        
      </item>
    
      <item>
        <title>¿Es seguro utilizar Internet?</title>
        <description>&lt;p&gt;Si sabemos lo que estamos haciendo y sabemos como protegernos se puede considerar seguro, pero en caso contrario no lo es aunque muchos puedan pensar que si.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Algunas de las medidas que podemos tomar para protegernos son las siguientes:&lt;/p&gt;

&lt;h3 id=&quot;actualizaciones-de-software&quot;&gt;1. Actualizaciones de software.&lt;/h3&gt;
&lt;p&gt;Aunque esto pueda parecer un tontería y muchas veces las actualizaciones puedan llegar a ser un incordio,
actualizar el sistema operativo o el software que utilizamos es muy importante ya que la mayoría de las
actualizaciones corrigen fallos de seguridad.
Aquí existe un problema con los dispositivos móviles con Android ya que las actualizaciones dependen del
fabricante y en muchos casos no actualizan el sistema operativo. Por ejemplo en Android existe un fallo de
seguridad en las versiones inferiores  a 4.4 con el cual un ciberdelincuente podría acceder a nuestro
dispositivo fácilmente si accedemos a una web maliciosa, actualmente este fallo ha sido utilizado por un
ransomware para instalar una aplicación y bloquear el dispositivo. Para asegurarnos tener actualizaciones
en dispositivos móviles la mejor opción son los Nexus y los dispositivos de Apple.&lt;/p&gt;

&lt;h3 id=&quot;uso-de-verificacin-en-dos-pasos&quot;&gt;2. Uso de verificación en dos pasos.&lt;/h3&gt;
&lt;p&gt;Este tipo de verificación está presente en la mayoría de los principales servicios online (Google, Facebook,
Dropbox, Github… ) y su uso es muy sencillo. Además de la típica contraseña para acceder a nuestra cuenta
deberemos introducir un código temporal que se genera cada 30 segundos, este código será generado por una app
o en algunos casos lo podremos configurar para que nos lo envíen por SMS. Para generar los códigos de
verificación desde nuestro smartphone podemos utilizar Google Authenticator tanto en
&lt;a href=&quot;https://itunes.apple.com/es/app/google-authenticator/id388497605?mt=8&quot; target=&quot;_blank&quot;&gt;iOS&lt;/a&gt; como en &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;amp;hl=es&quot; target=&quot;_blank&quot;&gt;Android&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;copias-de-seguridad&quot;&gt;3. Copias de seguridad.&lt;/h3&gt;
&lt;p&gt;Otra simple medida que podemos adoptar son las copias de seguridad. Con ellas no evitaremos ataques de
ciberdelincuentes pero en caso de que algún ransomware cifre nuestros datos no los perderemos y podremos
recuperarlos.&lt;/p&gt;

&lt;h3 id=&quot;navegar-por-sitios-de-confianza&quot;&gt;4. Navegar por sitios de confianza.&lt;/h3&gt;
&lt;p&gt;Muchas veces los usuarios no son conscientes de que algunos sitios web pueden no ser seguros y por lo tanto es
recomendable acceder a páginas que conozcamos y sepamos que son de total confianza. También es importante en el
caso de que la web a la que intentemos acceder disponga de conexión https asegurarnos de que la
estamos utilizando.&lt;/p&gt;

&lt;h3 id=&quot;no-conectarse-a-redes-pblicas&quot;&gt;5. No conectarse a redes públicas.&lt;/h3&gt;
&lt;p&gt;En la actualidad mucha gente está deseando llegar a un sitio con una red wifi abierta sin contraseña o cerrada
pero que pueda tener acceso como por ejemplo en un bar donde en muchos casos nos ofrecen la contraseña para
conectarnos a la red wifi. Esto es una de las cosas más peligrosas que se pueden hacer, ya que si hay algún 
ciberdelincuente conectado a la red nos podría robar contraseñas y multitud de datos de una forma bastante
sencilla. En caso de querer utilizar redes públicas lo recomendable es utilizar una VPN para conectarnos de
forma privada a nuestra red para poder navegar desde ella pero para realizar este tipo de configuraciones
hacen falta conocimientos avanzados.&lt;/p&gt;

&lt;h3 id=&quot;utilizar-apps-de-tiendas-de-confianza-google-play-app-store&quot;&gt;6. Utilizar apps de tiendas de confianza (Google Play, App Store…)&lt;/h3&gt;
&lt;p&gt;Es importante descargar software y apps de fuentes conocidas para asegurarnos que provienen del desarrollador
y que no han sido modificadas. Aun así es importante revisar los permisos que requieren las aplicaciones aunque
estas provengan de una tienda oficial ya que de vez en cuando se cuela alguna app maliciosa. En la actualidad
es común ver gente instalando aplicaciones de Android de origen desconocido por ahorrarse unos pocos euros,
cada vez que alguien me comenta algo de alguna aplicación de este tipo le enseño como muchas de esas apps
al instalarlas piden permisos para enviar y recibir llamadas y SMS, permisos para acceder al almacenamiento
interno etc. Creo que vale la pena pagar lo poco que vale la app que dar todos estos permisos sobre nuestro
smartphone a un ciberdelincuente.&lt;/p&gt;

&lt;h3 id=&quot;privacidad-en-redes-sociales&quot;&gt;7. Privacidad en redes sociales.&lt;/h3&gt;
&lt;p&gt;A mucha gente le gusta mostrar su vida en las redes sociales pero esto debe tener un límite y más aún si la
cuenta que se utiliza es pública o no se controla el tipo de seguidores. En muchos casos es común ver personas
publicando que en los próximos días se van de viaje o que están de viaje en tal sitio, esta información puede
ser utilizada por ladrones ya que sabrán que no hay nadie en casa. Con esto no quiero decir que no se pueda
mostrar nada, pero se puede hacer tras volver del viaje pero nunca contando los planes futuros o diciendo
donde estamos en ese mismo momento.&lt;/p&gt;

&lt;h3 id=&quot;uso-de-antivirus&quot;&gt;8. Uso de antivirus.&lt;/h3&gt;
&lt;p&gt;Un antivirus puede prevenir algunas amenazas pero no todas ya que algunas no son detectadas por los antivirus
aunque sean un propio virus. Aún así es importante usar un antivirus sobretodo en el caso de usuarios inexpertos
ya que en muchos casos no son conscientes del peligro de algunas acciones.&lt;/p&gt;

&lt;h3 id=&quot;permisos-de-usuario&quot;&gt;9. Permisos de usuario.&lt;/h3&gt;
&lt;p&gt;Es muy común ver a personas utilizando el ordenador con permisos de administrador cuando en muchos casos no
tienen conocimientos de lo que están haciendo. En muchos casos se podrían prevenir algunas cosas utilizando
cuentas con los permisos limitados ya que no es lo mismo abrir un archivo infectado como administrador que
hacerlo con un usuario con permisos limitados.&lt;/p&gt;

&lt;h3 id=&quot;sentido-comn&quot;&gt;10. Sentido común.&lt;/h3&gt;
&lt;p&gt;Por último el punto más importante el sentido común. En muchos casos el principal fallo de seguridad es el
factor humano, ya sea por desconocimiento o confianza, en la mayoría de los casos es el usuario el que realiza
una acción imprudente que permite a los ciberdelincuentes realizar estas malas prácticas. Así que para evitar
la mayoría de los ataques con seguir los consejos y aplicar el sentido común debería de ser suficiente.&lt;/p&gt;

</description>
        <pubDate>Tue, 03 May 2016 21:00:00 +0000</pubDate>
        <link>http://albujer.com/blog/2016/05/03/internet-security/</link>
        <guid isPermaLink="true">http://albujer.com/blog/2016/05/03/internet-security/</guid>
        
        <category>Seguridad</category>
        
        
      </item>
    
      <item>
        <title>Commits verificados en Github</title>
        <description>&lt;p&gt;Hace unos días apareció la opción de los commits verificados en Github, para utilizar esta opción 
simplemente hay que firmar los commits con GPG.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Para configurar esta característica en Linux y OSX debemos seguir los siguientes pasos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lo primero que tenemos que hacer es comprobar si ya tenemos una llave de GPG en nuestro PC.
Para ello utilizaremos el siguiente comando.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --list-keys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;En caso de no tener ninguna llave podremos generar una con el siguiente comando.
    &lt;ul&gt;
      &lt;li&gt;Es importante que al generar la llave introduzcamos el email que usemos en Github.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --gen-key&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Una vez generada la llave podremos consultarla con el comando anterior.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --list-keys
/Users/hubot/.gnupg/pubring.gpg
------------------------------------
pub   4096R/A8F99211 2016-04-05
uid                  Hubot 
sub   4096R/Z832QR89 2016-04-05&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Tras en anterior comando obtendremos el ID de la llave en este caso &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A8F99211&lt;/code&gt;&lt;/strong&gt;. Ahora exportaremos
la llave en formato ASCII armor con el siguiente comando.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --armor --export A8F99211&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Una vez exportada la llave la podremos copiar y añadir a nuestra cuenta de Github. Para ello hay que ir
a la &lt;a href=&quot;https://github.com/settings/keys&quot; target=&quot;_blank&quot;&gt;Configuración de llaves de Github&lt;/a&gt; y pulsaremos el botón
&lt;strong&gt;New GPG Key&lt;/strong&gt; el cual nos permitirá pegar la llave y añadirla.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finalmente nos faltaría añadir la llave a nuestra configuración local de git utilizando el ID anterior
(&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A8F99211&lt;/code&gt;&lt;/strong&gt;). Para ello utilizaremos el siguiente comando.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.signingkey public GPG key A8F99211&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ahora ya podemos realizar commits firmados con el siguiente comando.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git commit -S -m &lt;span class=&quot;s2&quot;&gt;&quot;Mensaje commit&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Una vez hagamos push de estos commits ya deberíamos verlos como verificados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/signed-commit.png&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Apr 2016 21:00:00 +0000</pubDate>
        <link>http://albujer.com/blog/2016/04/17/github-signed-commits/</link>
        <guid isPermaLink="true">http://albujer.com/blog/2016/04/17/github-signed-commits/</guid>
        
        <category>Gihub</category>
        
        
      </item>
    
      <item>
        <title>Hola Mundo</title>
        <description>&lt;p&gt;Después de mucho tiempo con la intención de crear mi propia web personal al fin ha llegado el día.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;En esta web me gustaría mostrar algunos de mis proyectos, compartir mis conocimientos relacionados con
las nuevas tecnologías y la programación.&lt;/p&gt;

&lt;p&gt;Aun no estoy seguro del cual va a ser el contenido exacto del blog, pero me gustaría hablaros de cosas
relacionadas con Android (programación, noticias, novedades …). También me gustaría hablaros sobre
Raspberry ya que actualmente tengo un Raspberry Pi 2 Model B, en este caso seguramente sea todo a nivel
de sistemas operativos, aplicaciones y servicios que podemos ejecutar en este mini PC. Por ultimo también
creo que puede ser interesante hablar sobre Linux y OSX.&lt;/p&gt;

&lt;p&gt;Además si el tiempo me lo permite me gustaría aprovechar para aprender &lt;a href=&quot;https://angular.io/&quot; target=&quot;_blank&quot;&gt;Angular&lt;/a&gt;,
&lt;a href=&quot;https://www.polymer-project.org/&quot; target=&quot;_blank&quot;&gt;Polymer&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; … y de paso contarlo en el blog.&lt;/p&gt;

&lt;p&gt;En esta primera publicación tampoco quiero entrar en mucho detalle así que simplemente compartiré en en
varios lenguajes el típico código que se suele usar cuando se aprende a programar,el famoso Hola Mundo.&lt;/p&gt;

&lt;h4 id=&quot;python&quot;&gt;Python:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hola Mundo!&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;java&quot;&gt;Java:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HolaMundo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hola Mundo!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;javascript&quot;&gt;Javascript:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 03 Apr 2016 14:00:00 +0000</pubDate>
        <link>http://albujer.com/blog/2016/04/03/hola-mundo/</link>
        <guid isPermaLink="true">http://albujer.com/blog/2016/04/03/hola-mundo/</guid>
        
        <category>Hola Mundo</category>
        
        <category>Python</category>
        
        <category>Java</category>
        
        <category>Javascript</category>
        
        
      </item>
    
  </channel>
</rss>
